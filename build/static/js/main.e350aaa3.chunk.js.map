{"version":3,"sources":["Components/Grid.jsx","Components/Home.jsx","Components/Helper/Utils.js","Components/ModalClient.jsx","Components/ModalBtn.jsx","Components/Helper/API.js","Components/Alert.jsx","Components/Loading.jsx","Components/Clientes.jsx","Components/ClienteProfile.jsx","Components/Login.jsx","Router.jsx","Components/Template/Header.jsx","App.jsx","index.js"],"names":["Grid","col_splited","String","this","props","cols","split","grid","length","concat","react_default","a","createElement","className","classes","getCols","children","Component","Home","Grid_Grid","data-toggle","href","id","Utils","date","pattern","arguments","undefined","moment","format","ano","Date","duration","years","state","console","log","nome","valid","email","cpf","nascimento","data","status","isLogin","localStorage","getItem","path","window","location","e","preventDefault","removeItem","Redirect","setItem","usuario","token","name","value","telefone","ModalClient","tabIndex","role","aria-labelledby","noValidate","onSubmit","handleSubmit","encType","title","onChange","handleChange","type","getClassValidation","error","es","mask","formErrors","form","data-dismiss","disabled","submitIsDisabled","ModalBtn","color","data-target","icon","text","URL","axios","create","baseURL","Alert","dismiss","Loading","x","y","viewBox","cx","cy","r","Clientes","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","clientSearch","searchMessageError","clientes","loaded","alert","show","message","bind","assertThisInitialized","handleSearch","fieldName","rule","rule_error","fieldValidationErrors","match","isBetween","setState","objectSpread","validateForm","formValid","emailValid","passwordValid","_this2","target","validateField","criteria","search","API","get","cliente","prompt","delete","then","reload","catch","err","_this3","post","ClientData","_this4","getUser","placeholder","onClick","map","key","getFirstName","data-placement","handleRemove","ClienteProfile","handleUpdate","params","put","style","padding","getAnoCliente","formatDate","createdAt","Login","senha","senha2","alertMsg","alertMsgColor","doubleCheckPass","changePageType","validateInputs","isValid","count","setUserSession","rows","alt","src","resolveNameLogin","Authenticated","PrivateRoute","_ref","component","rest","objectWithoutProperties","Route","assign","render","to","pathname","from","PublicRoute","_ref2","Router","BrowserRouter","Switch","Router_PublicRoute","exact","Router_PrivateRoute","Header","aria-controls","aria-expanded","aria-label","isAuthenticated","Logout","App","Header_Header","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e350aaa3.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Grid extends Component {\r\n    getCols(){\r\n        let cols = String(this.props.cols)\r\n        let col_splited = cols.split(\" \")\r\n        let grid = ''\r\n        \r\n        if(col_splited.length > 0){\r\n            grid += col_splited[0] ? `col-lg-${col_splited[0]} ` : ''\r\n            grid += col_splited[1] ? `col-md-${col_splited[1]} ` : ''\r\n            grid += col_splited[2] ? `col-sm-${col_splited[2]} ` : ''\r\n        } else {\r\n            grid = 'col-lg-12'\r\n        }\r\n        \r\n        return grid\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className={`${this.props.classes} ` + this.getCols()}>{this.props.children}</div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport Grid from './Grid';\r\nimport './Styles/styleDefault.css'\r\nexport default () => (\r\n    <Grid cols=\"12\">\r\n    <br/>\r\n            <ul className=\"nav nav-tabs\">\r\n                <li className=\"nav-item\">\r\n                    <a className=\"nav-link active show\" data-toggle=\"tab\" href=\"#desafio\">Desafio</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" data-toggle=\"tab\" href=\"#consideracoes\">Considerações</a>\r\n                </li>\r\n            </ul>\r\n            <div id=\"myTabContent\" className=\"tab-content\">\r\n                <div className=\"tab-pane fade active show\" id=\"desafio\">\r\n                <Grid cols=\"6 12 12\">\r\n                <div className=\"wrapper\">\r\n                <br/><h2>Desafio Front-End da Accenture Recife</h2>\r\n                    <p>O desafio proposta consiste em desenvolver uma aplicação que possibilita o cadastro de potenciais clientes de um novo produto.</p>\r\n                    <h3><strong>Requisitos funcionais</strong></h3>\r\n                    <ul>\r\n                        <li className=\"green\">Eu, como usuário, desejo cadastrar um cliente (nome completo, idade, cpf, telefone e e-mail). Todos os campos são obrigatórios;</li>\r\n                        <li className=\"green\">Eu, como usuário, desejo ver a listagem dos clientes (primeiro nome, telefone, e-mail);</li>\r\n                        <li className=\"green\">Eu, como usuário, desejo ver uma mensagem amigável quando não houver nenhum cliente cadastrado;</li>\r\n                        <li className=\"green\">Eu, como usuário, desejo buscar por um cliente pelo Nome ou CPF;</li>\r\n                        <li className=\"green\">Eu, como usuário, desejo ver os detalhes desse usuário que foi buscado (nome completo, idade, cpf, telefone e e-mail);</li>\r\n                        <li className=\"green\">Eu, como usuário, desejo poder alterar os dados do cliente;</li>\r\n                        <li className=\"green\">Eu, como usuário, desejo poder apagar um cliente (confirmando o cpf do mesmo);</li>\r\n                    </ul>\r\n                    <h3><strong>Requisitios técnicos</strong></h3>\r\n                    <ul>\r\n                        <li className=\"green\">Responsividade (resolucão mínima de 460x)</li>\r\n                        <li className=\"green\">Consumir e Persistir os dados localmente</li>\r\n                        <li className=\"red\">Desenvolver testes unitários</li>\r\n                        <li className=\"green\">Uso de rotas</li>\r\n                        <li className=\"green\">Validacão de formulário com tratamento de erro</li>\r\n                        <li className=\"orange\">Suporte IE11+, Chrome, Safari, Firefox.</li>\r\n                    </ul>\r\n                    <h3><strong>Stack</strong></h3>\r\n                    <ul>\r\n                        <li className=\"green\">Utilizar um framework SPA de sua escolha, mas recomendamos - <u className=\"green\">React.js</u>, Angular, Vue.js.</li>\r\n                        <li className=\"green\">Utilizar um framework CSS de sua escolha, como <u className=\"green\">bootstrap</u> ou Materialize.</li>\r\n                        <li className=\"orange\">Utilizar automatizador de tarefas de sua escolha, como Gulp , Grunt ou <u className=\"orange\"> Webpack </u>.</li>\r\n                    </ul>\r\n                    <hr />\r\n\r\n                    <b>Legenda:</b>\r\n                    <ul>\r\n                        <li className=\"green\">Implementado</li>\r\n                        <li className=\"red\">Não implementado</li>\r\n                        <li className=\"orange\">Talvez / Em partes</li>\r\n                    </ul>\r\n                </div>\r\n            </Grid>\r\n                </div>\r\n                <div className=\"tab-pane fade\" id=\"consideracoes\">\r\n                <Grid cols=\"6\"> <br />\r\n                <h2>Observações e Considerações</h2>\r\n                <p>Para realização do projeto foram utilizadas algumas ferramentas extras para dar apoio ao Front-end servindo as informações, um back-end foi criado para isso utilizando: </p>\r\n                <ul>\r\n                    <li>Express</li>\r\n                    <li>Sequelize</li>\r\n                    <li>Body-Parser</li>\r\n                    <li>UUID</li>\r\n                    <li>DOTENV</li>\r\n                    <li><s>TokenJWT</s></li>\r\n                </ul>\r\n\r\n                <b>OBS¹: Caso não seja possível a inicialização do back-end local pode se utilizar a API rodando no Heroku pelo arquivo API.JS</b> <br />\r\n                <b>OBS²: Não foi possível realizar todos os cenários de testes, principalmente nos input</b> <br />\r\n                <b>OBS³: IE não foi testado</b>\r\n                <br />\r\n                <br />\r\n                <h3>A API e o projeto está sendo executado no Heroku, <a href=\"https://desafio-accenture-k.herokuapp.com/\"> link </a>: </h3>\r\n                <p>Uma simples definição das rotas presentes em: https://desafio-accenture-k.herokuapp.com/</p>\r\n                <h4>API</h4>\r\n                <ul>\r\n                    <li>post('cliente/')</li>\r\n                    <li>get('cliente/')</li>\r\n                    <li>get('cliente/:id')</li>\r\n                    <li>get('cliente/search/:criteria')</li>\r\n                    <li>put('cliente/:id')</li>\r\n                    <li>delete('cliente/:id')</li>\r\n                </ul>\r\n                <h4>React Web</h4>\r\n                <ul>\r\n                    <li>/ [LoginPage]</li>\r\n                    <li>/inicio [Página Inicial]</li>\r\n                    <li>/clientes[Lista de Clientes]</li>\r\n                    <li>/clientes/:id [Perfil do Cliente]</li>\r\n                </ul>\r\n\r\n            </Grid>\r\n                </div>\r\n            </div>\r\n    </Grid>\r\n)","import moment from 'moment'\r\n\r\n class Others {\r\n    formatDate(date, pattern = \"DD/MM/YYYY\"){\r\n        return moment(date).format(pattern);\r\n    }\r\n\r\n    getAnoCliente(date){\r\n        let ano = new Date() - new Date(date)\r\n        let duration = moment.duration(ano, 'milliseconds').years()\r\n        return duration\r\n    }\r\n\r\n    validateForm(state){\r\n        console.log(state)\r\n        if (state.nome.valid && state.email.valid && state.cpf.valid && state.nascimento.valid && state.email.valid){\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    isValid(data){\r\n        if(data === \"\" || data === undefined || data.length <= 2){\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    getClassValidation(status){\r\n        if(status === \"\"){\r\n            return ''\r\n        } else if(status){\r\n            return 'valid'\r\n        } else {\r\n            return 'invalid'\r\n        }\r\n    }\r\n\r\n    resolveNameLogin(isLogin){\r\n        if(isLogin){\r\n            return \"Login\"\r\n        } else {\r\n            return \"Cadastrar\"\r\n        }\r\n    }\r\n\r\n    getUser(){\r\n        return localStorage.getItem('user');\r\n    }\r\n\r\n    getToken(){\r\n        return localStorage.getItem('token');\r\n    }\r\n\r\n    isAuthenticated(){\r\n        return localStorage.getItem('authenticated');\r\n    }\r\n\r\n    Redirect(path){\r\n        window.location.href = path\r\n    }\r\n\r\n    Logout(e){\r\n        e.preventDefault();\r\n        localStorage.removeItem('user');\r\n        localStorage.removeItem('authenticated');\r\n        this.Redirect('/')\r\n    }\r\n\r\n    setUserSession(data){\r\n        localStorage.setItem('authenticated', true);\r\n        localStorage.setItem('user', data.usuario);\r\n        localStorage.setItem('name', data.nome);\r\n        localStorage.setItem('token', data.token);\r\n    }\r\n\r\n    getFirstName(name){\r\n        let nome = String(name).split(' ');\r\n        return nome[0];\r\n    }\r\n\r\n    ClientData(state){\r\n        return {\r\n            nome: state.nome.value,\r\n            nascimento: state.nascimento.value,\r\n            email: state.email.value,\r\n            telefone: state.telefone.value,\r\n            cpf: state.cpf.value\r\n        }\r\n    }\r\n}\r\n\r\nexport default new Others()\r\n\r\n","import React from 'react'\r\nimport Grid from './Grid'\r\nimport MaskedInput from 'react-maskedinput'\r\nimport Utils from './Helper/Utils'\r\n\r\nexport default props => (\r\n    <div className=\"modal fade\" id={`${props.id}`} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n        <div className=\"modal-dialog modal-lg\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n                <form className=\"need-validation\" noValidate onSubmit={props.handleSubmit} encType=\"multipart/form-data\">\r\n                    <div className=\"modal-header\">\r\n                        <h4 className=\"modal-title\" id=\"myModalLabel\">{props.title}</h4>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"row\">\r\n                        <Grid classes=\"form-group\" cols=\"6 6 12\">\r\n                        <label>Nome</label>\r\n                            <input name=\"nome\" value={props.data.nome.value} onChange={props.handleChange} type=\"text\" className={`form-control ${Utils.getClassValidation(props.data.nome.valid)}`}/>\r\n                            {\r\n                                !props.data.nome.valid ? <div className=\"alert-error\">{props.data.nome.error}</div> : ''\r\n                            }\r\n                        </Grid>\r\n                        <Grid classes=\"form-group\" cols=\"6 6 12\">\r\n                        <label>Endereço Email</label>\r\n                            <input name=\"email\" value={props.data.email.value} onChange={props.handleChange} type=\"email\" className={`form-control ${Utils.getClassValidation(props.data.email.valid)}`}/>\r\n                            {\r\n                                !props.data.email.valid ? <div className=\"alert-error\">{props.data.email.error}</div> : ''\r\n                            }\r\n                        </Grid>\r\n                        <Grid classes=\"form-group\" cols=\"4 6 12\">\r\n                        <label>CPF</label>\r\n                            <MaskedInput mask=\"111.111.111-11\" value={props.data.cpf.value} className={`form-control ${Utils.getClassValidation(props.data.cpf.valid)}`}  name=\"cpf\" onChange={props.handleChange}/>\r\n                            {\r\n                                !props.data.cpf.valid ? <div className=\"alert-error\">{props.data.cpf.error}</div> : ''\r\n                            }\r\n                        </Grid>\r\n                        <Grid classes=\"form-group\" cols=\"4 6 12\">\r\n                        <label>Telefone</label>\r\n                            <MaskedInput mask=\"(11) 11111-1111\" value={props.data.telefone.value} className={`form-control ${Utils.getClassValidation(props.data.telefone.valid)}`} name=\"telefone\" onChange={props.handleChange}/>\r\n                            {\r\n                                !props.data.telefone.valid ? <div className=\"alert-error\">{props.data.telefone.error}</div> : ''\r\n                            }\r\n                        </Grid>\r\n                        <Grid classes=\"form-group\" cols=\"4 6 12\">\r\n                        <label>Nascimento</label>\r\n                            <input name=\"nascimento\" value={props.data.nascimento.value} onChange={props.handleChange} type=\"date\" className={`form-control ${Utils.getClassValidation(props.data.nascimento.valid)}`}/>\r\n                            {\r\n                               !props.data.nascimento.valid ? <div className=\"alert-error\">{props.data.nascimento.error}</div> : ''\r\n                            }\r\n\r\n                        </Grid>\r\n                        </div>\r\n                        {\r\n                            props.data.formErrors.form ? <div className=\"alert-error\">Preencha todos os dados corretamente.</div> : ''\r\n                        }\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\r\n                        <button type=\"submit\" disabled={props.data.submitIsDisabled} className=\"btn btn-primary\">Save changes</button>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n)","import React from 'react'\r\n\r\nexport default props => <button className={`btn btn-${props.color}`} data-toggle=\"modal\" data-target={`#${props.id}`} ><i className={`fa fa-${props.icon}`}></i> {props.text} </button>\r\n\r\n","import axios from 'axios'\r\n\r\nconst URLS = {\r\n    PROD: 'https://desafio-accenture-k.herokuapp.com',\r\n    DEV: 'http://localhost:5000'\r\n}\r\n\r\n// OBS, o endereço de prod está funcionando\r\n\r\nconst URL = axios.create({baseURL: URLS.PROD});\r\nexport default URL;","import React from 'react'\r\n\r\nexport default props => (\r\n    <div className={`alert ${props.dismiss ? 'alert-dismissible' : ''} alert-${props.color}`}>\r\n        <strong><i className={`fa fa-${props.icon}`}></i> {props.title}</strong>\r\n        {props.dismiss ? <button type=\"button\" className=\"close\" data-dismiss=\"alert\">&times;</button> : ''}\r\n        {props.children}\r\n    </div>\r\n)","import React from 'react'\r\n\r\nexport default () => (\r\n    <div className=\"loading-bro\">\r\n        <h1>Aguarde...</h1>\r\n        <svg id=\"load\" x=\"0px\" y=\"0px\" viewBox=\"0 0 150 150\">\r\n            <circle id=\"loading-inner\" cx=\"75\" cy=\"75\" r=\"60\"/>\r\n        </svg>\r\n    </div>\r\n)","import React, { Component } from 'react'\r\nimport Grid from './Grid';\r\nimport ModalClient from './ModalClient'\r\nimport ModalBTN from './ModalBtn'\r\nimport API from './Helper/API'\r\nimport Alert from './Alert'\r\nimport Utils from './Helper/Utils';\r\nimport Loading from './Loading'\r\nimport moment from 'moment'\r\nexport default class Clientes extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            nome: {value: '', valid: ''},\r\n            nascimento: {value: '', valid: ''},\r\n            cpf: {value: '', valid: ''},\r\n            telefone: {value: '', valid: ''},\r\n            email: {value: '', valid: '', error: ''},\r\n            clientSearch : {value: ''},\r\n            searchMessageError: 'Não possuem clientes cadastrados na base de dados.',\r\n            formErrors: {nome: '', nascimento: '', telefone: '', email: '', cpf: '', form: ''},\r\n            clientes : [],\r\n            submitIsDisabled: false,\r\n            loaded: false,\r\n            alert: {show: false, message: '', color: ''}\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.handleSearch();\r\n    }\r\n\r\n    validateField(fieldName, value) {\r\n        var fieldValidationErrors = this.state.formErrors;\r\n        let rule, valid, rule_error\r\n        \r\n        switch(fieldName) {\r\n          case 'email':\r\n            rule = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n            rule_error = rule ? '' : `O Email ${value} está inválido`\r\n            break;\r\n          case 'nome':\r\n            rule = value.length >= 10;\r\n            rule_error = rule ? '' : \"Insira o nome completo, mínimo 10 caractéres\"\r\n            break;\r\n        case 'telefone':\r\n            let telArr = String(value).split('')\r\n            rule = telArr[14] !== '_';\r\n            rule_error = rule ? '' : 'Insira o telefone corretamente'\r\n            break;\r\n        case 'nascimento':\r\n            rule = moment(value).isBetween('01/01/1920', moment());\r\n            rule_error = rule ? '' : 'Insira uma data válida' \r\n            break;\r\n        case 'cpf':\r\n            rule = value.match(/^\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}$/);\r\n            rule_error = rule ? '' : 'CPF Inválido'\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n\r\n        valid = rule ? true: false\r\n        fieldValidationErrors[fieldName] = rule_error\r\n        let state = this.state;\r\n        state[fieldName].valid = valid; \r\n        state[fieldName].error = rule_error; \r\n        this.setState({formErrors: fieldValidationErrors, ...state}, this.validateForm);\r\n      }\r\n\r\n      validateForm() {\r\n        this.setState({formValid: this.state.emailValid && this.state.passwordValid});\r\n      }\r\n\r\n    handleChange(e) {\r\n        let target = e.target.name\r\n        let value = e.target.value\r\n        let state = this.state;\r\n        state[target].value = value; \r\n        this.setState(state, () => {this.validateField(target, value)})\r\n    }\r\n\r\n   async handleSearch(e = null, criteria = ''){\r\n       let search = ''\r\n       if(e){ e.preventDefault()}\r\n       if(criteria !== ''){\r\n           search = `search/${criteria}`\r\n       }\r\n        try {\r\n            const clientes = await API.get(`/cliente/${search}`);\r\n            this.setState({clientes: clientes.data, loaded: true, searchMessageError: `Não foi possível encontrar ${criteria} na base de dados`});\r\n        } catch {\r\n            console.log('Nao foi possível se conectar a API')\r\n        }\r\n    }\r\n\r\n    handleRemove(cliente){\r\n        let cpf = window.prompt(`Para confirmar a remoção insira o CPF de ${cliente.nome}`)\r\n        console.log(cpf)\r\n        if(cpf === cliente.cpf){\r\n            API.delete(`/cliente/${cliente.id}`).then(data => {\r\n                window.location.reload();\r\n            }).catch(err => {\r\n                window.location.reload();\r\n            })\r\n        } else if(cpf == null) {} \r\n        else {\r\n            alert(`O CPF informado não é igual ao de ${cliente.nome}`);\r\n        }\r\n    }\r\n\r\n    handleSubmit(e){\r\n        e.preventDefault();\r\n        if(Utils.validateForm(this.state)){\r\n            this.setState({submitIsDisabled: true});\r\n            API.post(`/cliente`, Utils.ClientData(this.state)).then(data => {\r\n                alert(\"Cliente Cadastrado!\");\r\n                window.location.reload();\r\n            }).catch(err => {\r\n                alert(\"Erro ao cadastrar Cliente... Tente novamente\");\r\n                this.setState({submitIsDisabled: false});\r\n            })\r\n        } else {\r\n            this.setState({submitIsDisabled: false, formErrors: {form: \"Preencha o formulário corretamente\"}})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div> <br />\r\n                <Grid cols=\"12\">\r\n                    <div className=\"jumbotron\">\r\n                        <h3 className=\"display-5\">Bem vindo, {Utils.getUser()}</h3>\r\n                        <p className=\"lead\">A partir dessa página você poderá gerenciar o perfil dos clientes, cadastrar, remover e altera-los.</p>\r\n                    </div>\r\n                </Grid>\r\n                <Grid cols=\"12 12 12\">\r\n                    <div className=\"row\">\r\n                    <Grid cols=\"10\">\r\n                        <ModalBTN color=\"primary\" icon=\"user\" text=\"Novo Cliente\" id=\"client\" /> <br /> <br />\r\n                    </Grid>\r\n                    <form className=\"form-inline\">\r\n                    <div className=\"form-group mx-sm-3 mb-2\">\r\n                        <input type=\"text\" value={this.state.clientSearch.value} name=\"clientSearch\" onChange={this.handleChange} className=\"form-control col-md-12\" placeholder=\"ex: Cirilo\"/>\r\n                    </div>\r\n                    <button onClick={(e) => this.handleSearch(e, this.state.clientSearch.value)} className=\"btn btn-primary mb-2\"><i className=\"fa fa-search\"></i> Buscar</button>\r\n                    </form>\r\n                    \r\n                    </div>\r\n                    {\r\n                        this.state.loaded ? <div>\r\n                        {\r\n                            this.state.clientes.length > 0 ? \r\n                            <table className=\"table table-striped\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Primeiro Nome</th>\r\n                                    <th>CPF</th>\r\n                                    <th>Telefone</th>\r\n                                    <th>E-mail</th>\r\n                                    <th>Ações</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {\r\n                                this.state.clientes.map(cliente => (\r\n                                <tr key={cliente.id}>\r\n                                    <td>{Utils.getFirstName(cliente.nome)}</td>\r\n                                    <td>{cliente.cpf}</td>\r\n                                    <td>{cliente.telefone}</td>\r\n                                    <td>{cliente.email}</td>\r\n                                    <td>\r\n                                    <button onClick={() => Utils.Redirect(`clientes/${cliente.id}`)} className=\"btn btn-info\" title=\"Visualizar Cliente\"><i className=\"fa fa-user\"></i></button> &ensp;\r\n                                    <button data-toggle=\"tooltip\" data-placement=\"top\" onClick={() => this.handleRemove(cliente)} className=\"btn btn-danger\" title=\"Remover\"><i className=\"fa fa-trash\"></i></button>\r\n                                    </td>\r\n                                </tr>\r\n                                ))\r\n                            }\r\n                            </tbody>\r\n                        </table>\r\n                        :\r\n                        <Alert color=\"info\" title=\"Oops...\" icon=\"exclamation-triangle\" text=\"Não possuem usuários cadastrados...\">\r\n                            <p>{this.state.searchMessageError}</p>\r\n                        </Alert>\r\n                        }\r\n                    </div> : <Loading/>\r\n                    }\r\n                    \r\n                </Grid>\r\n                <ModalClient data={this.state} handleChange={this.handleChange} handleSubmit={this.handleSubmit} id=\"client\" title=\"Novo Cliente\" />\r\n            </div>\r\n        )\r\n    }\r\n} ","import React, { Component } from 'react'\r\nimport Grid from './Grid';\r\nimport API from './Helper/API'\r\nimport ModalBtn from './ModalBtn'\r\nimport ModalClient from './ModalClient'\r\nimport Utils from './Helper/Utils';\r\nimport Loading from './Loading'\r\nimport moment from 'moment'\r\nexport default class ClienteProfile extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            cliente: {},\r\n            nome: { value: '', valid: true },\r\n            nascimento: { value: '', valid: true },\r\n            cpf: { value: '', valid: true },\r\n            telefone: { value: '', valid: true },\r\n            email: { value: '', valid: true },\r\n            clientSearch: { value: '' },\r\n            searchMessageError: 'Não possuem clientes cadastrados na base de dados.',\r\n            formErrors: { nome: '', nascimento: '', telefone: '', email: '', cpf: '', form: '' },\r\n            clientes: [],\r\n            submitIsDisabled: false,\r\n            loaded: false,\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleUpdate = this.handleUpdate.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        let target = e.target.name\r\n        let value = e.target.value\r\n        let state = this.state;\r\n        state[target].value = value;\r\n        this.setState(state, () => { this.validateField(target, value) })\r\n    }\r\n\r\n\r\n    validateField(fieldName, value) {\r\n        var fieldValidationErrors = this.state.formErrors;\r\n        let rule, valid, rule_error\r\n\r\n        switch (fieldName) {\r\n            case 'email':\r\n                rule = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n                rule_error = rule ? '' : `O Email ${value} está inválido`\r\n                break;\r\n            case 'nome':\r\n                rule = value.length >= 10;\r\n                rule_error = rule ? '' : \"Insira o nome completo, mínimo 10 caractéres\"\r\n                break;\r\n            case 'telefone':\r\n                let telArr = String(value).split('')\r\n                rule = telArr[14] !== '_';\r\n                rule_error = rule ? '' : 'Insira o telefone corretamente'\r\n                break;\r\n            case 'nascimento':\r\n                rule = moment(value).isBetween('01/01/1920', moment());\r\n                rule_error = rule ? '' : 'Insira uma data válida'\r\n                break;\r\n            case 'cpf':\r\n                rule = value.match(/^\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}$/);\r\n                rule_error = rule ? '' : 'CPF Inválido'\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        valid = rule ? true : false\r\n        fieldValidationErrors[fieldName] = rule_error\r\n        let state = this.state;\r\n        state[fieldName].valid = valid;\r\n        state[fieldName].error = rule_error;\r\n        this.setState({ formErrors: fieldValidationErrors, ...state }, this.validateForm);\r\n    }\r\n\r\n    handleUpdate(e) {\r\n        let id = this.props.match.params.id;\r\n        e.preventDefault();\r\n\r\n        if (Utils.validateForm(this.state)) {\r\n            API.put(`/cliente/${id}`, Utils.ClientData(this.state)).then(data => {\r\n                alert(\"Cliente Atualizado!\");\r\n                window.location.reload();\r\n            }).catch(err => {\r\n                alert(\"Erro ao cadastrar Cliente...\");\r\n                window.location.reload();\r\n            })\r\n        } else {\r\n            console.log('Error validate...')\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let id = this.props.match.params.id;\r\n        API.get(`/cliente/${id}`).then(data => {\r\n            let cliente = data.data\r\n            this.setState({ cliente, loaded: true, nome: { value: cliente.nome, valid: true }, nascimento: { value: cliente.nascimento, valid: true }, cpf: { value: cliente.cpf, valid: true }, email: { value: cliente.email, valid: true }, telefone: { value: cliente.telefone, valid: true } })\r\n        }).catch(err => {\r\n            alert(err);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ padding: 10 }}>\r\n                {\r\n                    this.state.loaded ? <Grid cols=\"12 12 12\">\r\n                        <div className=\"card border-primary mb-3\">\r\n                            <div className=\"card-header\">{this.state.cliente.nome}</div>\r\n                            <div className=\"card-body\">\r\n                                <p className=\"card-title\">Dados do Cliente</p>\r\n                                <p className=\"card-text\">\r\n                                    <b>E-mail</b>: {this.state.cliente.email} <br />\r\n                                    <b>Idade:</b> {Utils.getAnoCliente(this.state.cliente.nascimento)} anos<br />\r\n                                    <b>Telefone</b>: {this.state.cliente.telefone} <br />\r\n                                    <b>CPF</b>: {this.state.cliente.cpf} <br />\r\n                                    <b>Cadastrado em</b>: {Utils.formatDate(this.state.cliente.createdAt, \"DD/MM/YYYY - HH:mm\")} <br />\r\n                                </p>\r\n                                <hr className=\"my-4\" />\r\n                                <p className=\"lead\">\r\n                                    <a className=\"btn btn-primary btn-lg\" href=\"../clientes\" role=\"button\"><i className=\"fa fa-arrow-left\"></i> Voltar</a> &ensp;&ensp;\r\n                            <ModalBtn icon=\"pencil\" color=\"info btn-lg\" id=\"edtClient\" text=\"Editar\" />\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </Grid> : <Loading />\r\n                }\r\n                <ModalClient data={this.state} handleChange={this.handleChange} handleSubmit={this.handleUpdate} id=\"edtClient\" title={`Atualização de dados de ${this.state.cliente.nome}`} />\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport './Styles/login.css'\r\nimport Grid from './Grid'\r\nimport Utils from './Helper/Utils'\r\nimport API from './Helper/API'\r\nimport Alert from './Alert'\r\nexport default class Login extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            nome: { value: '', valid: null, alert: '' },\r\n            usuario: { value: '', valid: null, alert: '' },\r\n            senha: { value: '', valid: null, alert: '' },\r\n            senha2: { value: ''},\r\n            isLogin: true,\r\n            alertMsg: '',\r\n            alertMsgColor: 'danger',\r\n            doubleCheckPass: true,\r\n            submitIsDisabled: false\r\n            \r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.changePageType = this.changePageType.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        let target = e.target.name\r\n        let state = this.state;\r\n        state[target].value = e.target.value;\r\n        this.setState(state)\r\n    }\r\n\r\n    changePageType(e) {\r\n        e.preventDefault()\r\n        this.setState({ isLogin: !this.state.isLogin })\r\n    }\r\n\r\n    handleSubmit() {\r\n        var data = { usuario: this.state.usuario.value, senha: this.state.senha.value, nome: this.state.nome.value }\r\n        let validateInputs = Utils.isValid(data.usuario) && Utils.isValid(data.senha)\r\n        if (this.state.isLogin) {\r\n            if(validateInputs){\r\n                this.setState({submitIsDisabled: true});\r\n                API.post('/auth/login', data).then(data => {\r\n                    if (data.data.count === 1) {\r\n                        Utils.setUserSession(data.data.rows[0])\r\n                        Utils.Redirect('/inicio')\r\n                    } else {\r\n                        this.setState({alertMsg: \"Usuário ou senha inválida\", alertMsgColor: 'danger', submitIsDisabled: false})\r\n                    }\r\n                }).catch(err => {\r\n                    console.log(err)\r\n                    this.setState({submitIsDisabled: true});\r\n                })\r\n            } else {\r\n                this.setState({alertMsg: \"Preencha Usuário e Senha!\", alertMsgColor: 'danger'})                \r\n            }\r\n        } else { //register\r\n            if(validateInputs){\r\n                if(Utils.isValid(data.senha) && Utils.isValid(this.state.nome.value) && data.senha === this.state.senha2.value){\r\n                    this.setState({submitIsDisabled: true});\r\n                    API.post('/auth/register', data).then(data => {\r\n                        this.setState({alertMsg: `Cadastro realizado com sucesso!`, alertMsgColor: 'success', isLogin: true, submitIsDisabled: false})                \r\n                    }).catch(err => {\r\n                        this.setState({alertMsg: \"Usuário já existe, escolha outro!\", alertMsgColor: 'danger', submitIsDisabled: false})                \r\n                    })\r\n                } else {\r\n                     this.setState({doubleCheckPass:false, submitIsDisabled: false});\r\n                }\r\n            } else {\r\n                this.setState({alertMsg: \"Preencha os campos abaixo!\", alertMsgColor: 'danger', doubleCheckPass: true})    \r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid cols=\"12\" classes=\"loginPanel\">\r\n                <div className=\"text-center\">\r\n                    <img alt=\"Accenture Logo\" src=\"imgs/accenture.png\" />\r\n                </div>\r\n                {\r\n                    this.state.alertMsg !== '' ? <Alert color={this.state.alertMsgColor}> {this.state.alertMsg} </Alert> : ''\r\n                }\r\n                 {\r\n                    !this.state.isLogin ? <div className=\"form-group valid\">\r\n                        <input name=\"nome\" value={this.state.nome.value} type=\"text\" className=\"form-control\" onChange={(e) => this.handleChange(e)} placeholder=\"Nome Completo\" /> </div> : ''\r\n                }\r\n                <div className=\"form-group\">\r\n                    <input name=\"usuario\" value={this.state.usuario.value} type=\"text\" className={\"form-control\"} onChange={(e) => this.handleChange(e)} placeholder=\"Usuário\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input name=\"senha\" value={this.state.senha.value} type=\"password\" className=\"form-control\" onChange={(e) => this.handleChange(e)} placeholder=\"Senha\" />\r\n                </div>\r\n                {\r\n                    !this.state.isLogin ? <div className=\"form-group valid\">\r\n                        <input name=\"senha2\" value={this.state.senha2.value} type=\"password\" className=\"form-control\" onChange={(e) => this.handleChange(e)} placeholder=\"Repita a Senha\" />\r\n                        {\r\n                            !this.state.doubleCheckPass ? <div className=\"alert-error\">As senhas informadas não são iguais</div> : ''\r\n                        }\r\n                    </div> : ''\r\n                }\r\n                <button onClick={this.handleSubmit} disabled={this.state.submitIsDisabled} className=\"btn btn-primary btn-block btn-lg\"> {Utils.resolveNameLogin(this.state.isLogin)} </button> <br />\r\n                {\r\n                    this.state.isLogin ? <div className=\"text-center\">Ainda não é cadastrado? <a href=\"/register\" onClick={this.changePageType}>Cadastre-se</a></div>\r\n                        : <div className=\"text-center\">Já é cadastrado? <a href=\"/\" onClick={this.changePageType}>Login</a></div>\r\n                }\r\n            </Grid>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom'\r\nimport Home from './Components/Home'\r\nimport Clientes from './Components/Clientes'\r\nimport ClienteProfile from './Components/ClienteProfile'\r\nimport Login from './Components/Login'\r\n\r\nconst Authenticated = () => {\r\n    return localStorage.getItem('authenticated') || false;\r\n}\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => (\r\n    <Route {...rest} render={props => (\r\n        Authenticated() ? (\r\n            <Component {...props} />\r\n        ) : (\r\n            <Redirect to={{pathname: '/', state: {from: props.location}}}></Redirect>\r\n        )\r\n    )} />\r\n)\r\n\r\n\r\nconst PublicRoute = ({component: Component, ...rest}) => (\r\n    <Route {...rest} render={props => (\r\n        Authenticated() ? (\r\n            <Redirect to={{pathname: '/inicio', state: {from: props.location}}}></Redirect>\r\n        ) : (\r\n            <Component {...props} />\r\n        )\r\n    )} />\r\n)\r\n\r\n\r\nexport default () => (\r\n    <BrowserRouter>\r\n        <Switch>\r\n            <PublicRoute exact path=\"/\" component={Login} />\r\n            {/* <Route exact path=\"/\" component={Login} /> */}\r\n            <PrivateRoute exact path=\"/inicio\" component={Home} />\r\n            <PrivateRoute exact path=\"/clientes\" component={Clientes} />\r\n            <PrivateRoute exact path=\"/clientes/:id\" component={ClienteProfile} />\r\n        </Switch>\r\n    </BrowserRouter>\r\n)","import React, { Component } from 'react'\r\nimport Utils from '../Helper/Utils'\r\nexport default class Header extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"bs-component\">\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n          <a className=\"navbar-brand\" href=\"/inicio\">Accenture</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor02\" aria-controls=\"navbarColor02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarColor02\">\r\n            {\r\n              Utils.isAuthenticated() ?\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                  <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" href=\"/inicio\">Início<span className=\"sr-only\">(current)</span></a>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" href=\"/clientes\">Clientes</a>\r\n                  </li>\r\n                </ul>\r\n                : ''\r\n            }\r\n            {\r\n              Utils.isAuthenticated() ? <div className=\" form-inline my-2 my-lg-0\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                  <li className=\"nav-item\">\r\n                    <span className=\"nav-link\">Bem vindo {Utils.getUser()}!</span>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a href=\"/logout\" onClick={(e) => Utils.Logout(e)} className=\"nav-link\">Sair</a>\r\n                  </li>\r\n                </ul>\r\n              </div> : ''\r\n            }\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react';\nimport Router from './Router' \nimport Header from './Components/Template/Header'\nimport './Components/Styles/styleDefault.css'\nimport 'bootstrap/dist/js/bootstrap.js'\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header></Header>\n        <Router />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n"],"sourceRoot":""}